name: Deploy API to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ustawienie SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          echo "${{ secrets.SSH.PASSWORD }}" | ssh-add ~/.ssh/id_rsa

      - name: Czyszczenie starej wersji Dockera
        run: |
          ssh -v -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd HabitTracker/Docker
            docker-compose down --rmi all -v
            docker system prune -a -f
          EOF

      - name: Kopiowanie nowych plikÃ³w na serwer
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "HabitTracker"
          overwrite: true
          extra_args: "-o StrictHostKeyChecking=no"

      - name: Budowanie i uruchamianie Dockera
        run: |
          ssh -v -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd HabitTracker/Docker
            docker-compose build
            docker-compose up -d
          EOF